---
- name: disable default nodejs 18
  ansible.builtin.package: dnf module disable nodejs -y

- name: enable nodejs 20
  ansible.builtin.package: dnf module enable nodejs:20 -y

- name: install nodejs and mysql client
  ansible builtin.package:
   name: {{item}}
   state: present
   loop:
   - nodejs
   - mysql

- name: create expense user   #we have ansible user module also. we can use it. It hndles idempotency
  ansible.builtin.user:
    name: expense

- name: create /app directry if not exist
  ansible.builtin.file:
    path: /app
    state: directory

- name: download the backend code
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: unip / extract the backend code
  ansible.builtin.unarchive:
    src: /tmp/backend.zip  # by deafult ansble thinks, source file exists in ansible server. 
    dest: /app
    remot_src: yes  # with this remote_src as yes, ansible assumes, file exists in remote server.

- name: install npm class dependencies
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: copy backend.service file  # copy module works for files for without variables. we use template module
  ansible.builtin.template:
    src: backend.service.j2  # source file in templates directory with j2 and varaibles will be loaded from /vars directory in the backend role
    dest: /etc/systemd/system/backend.service  # destination in ansible remote server (managed node)
    
- name: install PyMySQL and cryptograpgy to connect to DB
  ansible.builtin.pip:
    name: 
    - PyMySQL
    - cryptography
    executable: pip3.9

- name: import schema sql data
  community.mysql.mysql_db:
    login_user: {{login_user}}
    login_password: {{login_password}}
    login_host: {{login_host}}
    target: /app/schema/backend.sql
    state: import
    name: all

- name: systemctl daemon reload and enable and restart backend service
  ansible.builtin.systemd_service:
    name: backend
    daemon_reload: true
    enabled: true
    state: restarted
    
    
